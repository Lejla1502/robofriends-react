{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","onChange","type","placeholder","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAUeA,EARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,YCSJC,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACzB,OACK,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCmBLK,EAxBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACd,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCENC,EAVC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,qBAAKT,UAAU,SAAf,SACI,uBAAOU,SAAUD,EAAcT,UAAU,mCACzCW,KAAK,SAASC,YAAY,qBCevBC,E,kDAlBX,WAAYvB,GACX,IAAD,8BACI,cAAMA,IACDwB,MAAM,CAAEC,UAAS,GAF1B,E,qDAKA,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,8DAEAG,KAAK5B,MAAMK,a,GAfFyB,aCwDbC,G,wDA/CX,aACC,IAAD,8BACI,gBAeJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAfxC,EAAKZ,MAAM,CACPV,OAAO,GACPoB,YAAY,IAJpB,E,qDAQJ,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACf,OAAO2B,S,oBAUnC,WAEI,MAA4Bb,KAAKJ,MAA1BV,EAAP,EAAOA,OAAQoB,EAAf,EAAeA,YACTQ,EAAed,KAAKJ,MAAMV,OAAO6B,QAAO,SAAAC,GAC1C,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASZ,EAAYW,kBAEzD,OAAS/B,EAAOiC,OAGZ,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,MAAd,yBACA,cAAC,EAAD,CAAWS,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ4B,WAP9B,6C,GA9BUZ,cCEHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCIdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACA,cAAC,EAAD,IADA,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28fd114e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Card = ({name, email, id})=>{\r\n   return (\r\n        <div className=\"tc bg-light-blue dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robot'></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n const CardList=({robots})=>{\r\n    return (\r\n        <div>\r\n       {\r\n            robots.map((user,i)=>{\r\n            return (\r\n            <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n            \r\n            />);\r\n            })\r\n       }\r\n            {/*<Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\r\n            <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n            <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>*/}\r\n        </div>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <div className=\"tc pa2\">\r\n            <input onChange={searchChange} className=\"tc pa3 ba b--gren bg-light-blue \" \r\n            type='search' placeholder='search robots'></input>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={ hasError:false }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n            return <h1>OOps something went wrong...</h1>\r\n        \r\n            return this.props.children\r\n    }\r\n\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n//import {robots} from './robots';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response=>  response.json())\r\n    .then(users=>this.setState({robots:users}));\r\n    \r\n    \r\n}\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value});\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        const {robots, searchfield}=this.state;\r\n        const filteredRobots=this.state.robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return (!robots.length)?                     //ternary operator (condition)?option1:option2\r\n        <h1>Loading</h1>:\r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1 \">robofriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filteredRobots}/>\r\n                </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n            \r\n        );\r\n        \r\n    }\r\n   \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n //since we're not using export default in robots\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}